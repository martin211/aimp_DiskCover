<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <!-- Color Palette -->
    <Color x:Key="TabItemBackground">#E7E7E7</Color>
    <Color x:Key="GrayButtonBackground">#D0D0D0</Color>
    <Color x:Key="TabStroke">#FF4F8BB9</Color>
    <Color x:Key="TabBorderColor">#808080</Color>
    <Color x:Key="BorderColor">#BCBCBC</Color>
    <!--<Color x:Key="ButtonBorderColor">#707070</Color>-->
    <Color x:Key="ButtonHoverBorderColor">#B89150</Color>
    <Color x:Key="ButtonHoverBackground">#FFDDA7</Color>
    <Color x:Key="TextboxPress1">#FF3B79AC</Color>
    <Color x:Key="TextboxPress2">#FFB2DBED</Color>
    <Color x:Key="ButtonBorderColor">#626262</Color>

    <Color x:Key="Over1">#FDFDFD</Color>
    <Color x:Key="Over3">#F0F0F0</Color>


    <Color x:Key="PressStroke1">#FF1D415C</Color>
    <Color x:Key="PressStroke2">#FF2C628B</Color>


    <!--60%-->
    <Color x:Key="ButtonHighlightMid3">#A535A6E6</Color>
    <Color x:Key="ItemOverStroke">#FFD8F0FA</Color>
    <Color x:Key="ItemSelectStroke">#FF98DDFB</Color>
    <Color x:Key="PressHighlight">#FF387599</Color>

    <SolidColorBrush x:Key="OutsideFontColor" Color="#FF000000"/>
    <SolidColorBrush x:Key="ButtonFontColor" Color="#FF042271"/>
    <SolidColorBrush x:Key="TextBoxPressBrush" Color="{StaticResource TextboxPress1}"/>
    <SolidColorBrush x:Key="hoverStroke" Color="{StaticResource ItemOverStroke}"/>
    <LinearGradientBrush x:Key="BtnOverFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Over1}" Offset="0"/>
        <GradientStop Color="{StaticResource Over3}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="grayGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F2F2F2" Offset="0"/>
        <!--<GradientStop Color="#F1F1F1" Offset="0.16"/>
        <GradientStop Color="#F0F0F0" Offset="0.32"/>
        <GradientStop Color="#EFEFEF" Offset="0.48"/>
        <GradientStop Color="#EDEDED" Offset="0.64"/>
        <GradientStop Color="#EBEBEB" Offset="0.8"/>
        <GradientStop Color="#E9E9E9" Offset="0.96"/>-->
        <GradientStop Color="#E7E7E7" Offset="1"/>
    </LinearGradientBrush>

    <Color x:Key="Over2">#FFC0E7FC</Color>
    <Color x:Key="Press1">#FFD896</Color>
    <Color x:Key="Press2">#FFD896</Color>
    <Color x:Key="Press3">#FF9DD5F4</Color>
    <LinearGradientBrush x:Key="BtnPressFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource Press1}" Offset="0"/>
        <GradientStop Color="{StaticResource Press2}" Offset="1"/>
        <!--<GradientStop Color="{StaticResource Over2}" Offset="0.5"/>
        <GradientStop Color="{StaticResource Press3}" Offset="0.509"/>-->
    </LinearGradientBrush>

    <!-- standard button specific resources -->
    <Color x:Key="ButtonHighlightMid">#FFEBCD</Color>
    <Color x:Key="ButtonHighlightMid2">#FFDDA7</Color>
    <LinearGradientBrush x:Key="btnOverFillHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource ButtonHighlightMid2}" Offset="0"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.101"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.899"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid2}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnPressFillHighlight" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="{StaticResource PressHighlight}" Offset="0"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.037"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.143"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid}" Offset="0.857"/>
        <GradientStop Color="{StaticResource ButtonHighlightMid3}" Offset="0.963"/>
        <GradientStop Color="{StaticResource PressHighlight}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnPressBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource PressStroke1}" Offset="0"/>
        <GradientStop Color="{StaticResource PressStroke2}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="test" Color="{StaticResource TabBorderColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="TabOverStroke" Color="{StaticResource TabStroke}"/>
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource ButtonBorderColor}"/>

    <Style TargetType="{x:Type UserControl}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style TargetType="Border" x:Key="BaseBorderStyle">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    </Style>

    <Style TargetType="StackPanel" x:Name="ContentPanel" x:Key="ContentPanel">
        <Setter Property="Background" Value="#F0F0F0"/>
    </Style>

    <Style TargetType="Border" x:Name="Header" x:Key="Header" BasedOn="{StaticResource BaseBorderStyle}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource BtnOverFill}"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <!--<Setter Property="FontWeight" Value="Bold"/>-->
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="CheckBox">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Tab specific resources -->
    <Style d:IsControlPart="True" TargetType="TabItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10,6,10,6"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource OutsideFontColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource OutsideFontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TemplateTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TopUnselectedOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>

                        <Grid x:Name="TemplateTopSelected" Margin="0, 0,0,0" Panel.ZIndex="0" Opacity="0">
                            <Grid>
                                <Border x:Name="BackgroundTop" Background="#FFFFFFFF" BorderBrush="#FF979AA2" BorderThickness="1,1,1,0" />
                            </Grid>
                            <Border x:Name="DisabledVisualTopSelected" Background="#8CFFFFFF" IsHitTestVisible="false" Visibility="Collapsed" />
                        </Grid>
                        <Grid x:Name="TemplateTopUnselected" Margin="0,2,0,0">
                            <Grid>
                                <Border x:Name="TopUnselected_Background" BorderBrush="{StaticResource test}" BorderThickness="1,1,1,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource TabItemBackground}"/>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="TopUnselectedOver" BorderBrush="{StaticResource TabOverStroke}" BorderThickness="1,1,1,0" Opacity="0"/>
                                <Border x:Name="TopUnselected_Highlight" Margin="1" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,0"/>
                            </Grid>
                            <Border x:Name="DisabledVisualTopUnSelected" Background="#8CFFFFFF" IsHitTestVisible="false" Visibility="Collapsed"/>
                        </Grid>

                        <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" Opacity="1">
                            <!--<ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Style>
                            </ContentPresenter.Resources>-->
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <!--<Setter Property="TextBlock.FontWeight" TargetName="ContentSite" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="ContentPresenter.Cursor" TargetName="ContentSite" Value="Hand"/>
                            <Setter Property="Grid.Cursor" TargetName="grid" Value="Hand"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Visibility" TargetName="DisabledVisualTopUnSelected" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="BaseButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
    </Style>

    <Style TargetType="Button" x:Key="GrayButton" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="{StaticResource BtnOverFill}"/>
        <Setter Property="Template" Value="{DynamicResource GrayButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1"/>
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0"/>
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0.84"/>
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0"/>
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="BackgroundNorm" Background="{StaticResource BtnOverFill}" BorderThickness="1" BorderBrush="#FF8E8F8F"/>
            <Border x:Name="BackgroundNorm_highlight" Margin="1" BorderBrush="#F2FFFFFF" BorderThickness="1,0,1,1" Opacity="0.65"/>
            <Border x:Name="BackgroundOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" Opacity="0"/>
            <Border x:Name="BackgroundOver_Highlight" Margin="1" Background="{StaticResource BtnOverFill}" Opacity="0"/>
            <Border x:Name="BackgroundPressed" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" Opacity="0"/>
            <Border x:Name="BackgoundPressed_Highlight" Margin="1" Opacity="0"/>
            <Border x:Name="Background_overlay" Margin="1,1,1,0" BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#00FFFFFF" Offset="0"/>
                        <GradientStop Color="#72FFFFFF" Offset="0.157"/>
                        <GradientStop Color="#72FFFFFF" Offset="0.5"/>
                        <GradientStop Color="#00FFFFFF" Offset="0.51"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="DisabledVisualElement" Background="#FFF1F1F1" BorderBrush="#FFB2B2B2" BorderThickness="1" IsHitTestVisible="false" Visibility="Collapsed"/>
            <ContentPresenter
                x:Name="contentPresenter"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"/>
            <TextBlock Panel.ZIndex="1"
                       x:Name="DisabledOverlay"
                       Text="{TemplateBinding Content}"
                       Foreground="#FF969696"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}"
                       Visibility="Collapsed"/>
            <Border x:Name="FocusVisualElement" Margin="1" BorderThickness="1" IsHitTestVisible="false" Opacity="0"/>
            <Border x:Name="DefaultBorder" Margin="1" BorderThickness="1" IsHitTestVisible="false" Opacity="0"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Opacity" TargetName="DefaultBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">

                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true"/>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                <Setter Property="Visibility" TargetName="DisabledOverlay" Value="Visible"/>
                <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GrayButtonTemplate" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1"/>
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0"/>
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0.84"/>
                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0.65"/>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0"/>
                <DoubleAnimation Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0"/>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="BackgroundNorm" BorderThickness="1" BorderBrush="#626262"/>
            <Border x:Name="BackgroundNorm_highlight" Background="{StaticResource grayGradient}" Margin="1" BorderBrush="#F2FFFFFF" BorderThickness="1,1,1,1" Opacity="0.65"/>
            <Border x:Name="BackgroundOver" Background="{StaticResource BtnOverFill}" BorderBrush="{StaticResource TextBoxPressBrush}" BorderThickness="1" Opacity="0"/>
            <Border x:Name="BackgroundOver_Highlight" Margin="1" Background="{StaticResource btnOverFillHighlight}" Opacity="0"/>
            <Border x:Name="BackgroundPressed" Background="{StaticResource BtnPressFill}" BorderBrush="{StaticResource btnPressBorder}" BorderThickness="1" Opacity="0"/>
            <Border x:Name="BackgoundPressed_Highlight" Margin="1" Opacity="0"/>
            <Border x:Name="Background_overlay" Margin="1,1,1,0" BorderThickness="1"/>
            <Border x:Name="DisabledVisualElement" Background="#FFF1F1F1" BorderBrush="#FFB2B2B2" BorderThickness="1" IsHitTestVisible="false" Visibility="Collapsed"/>
            <ContentPresenter
                x:Name="contentPresenter"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"/>
            <TextBlock Panel.ZIndex="1"
                       x:Name="DisabledOverlay"
                       Text="{TemplateBinding Content}"
                       Foreground="#FF969696"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}"
                       Visibility="Collapsed"/>
            <Border x:Name="FocusVisualElement" Margin="1" BorderThickness="1" IsHitTestVisible="false" Opacity="0"/>
            <Border x:Name="DefaultBorder" Margin="1" BorderThickness="1" IsHitTestVisible="false" Opacity="0"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Opacity" TargetName="DefaultBorder" Value="1"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">

                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true"/>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                <Setter Property="Visibility" TargetName="DisabledOverlay" Value="Visible"/>
                <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
